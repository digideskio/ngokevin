title: "First Patch to Mozilla and First Homemade Lunch"
type: blog
category: blog
author: Kevin Ngo <ngoke@onid.oregonstate.edu>

slug: "mozilla-day-nine"

image:
    url: http://i.imgur.com/puHgM.jpg
    where: right

date: 2012-05-09

---

[Day Nine](/blog/mozilla-day-nine)

After a week of practically partying and a couple days of setting up my
development environment, I got a commit ("to add code") into Mozilla's
Marketplace (app store). I am working on the statistics and graphs that
include installation, usage, and financial data for individual
applications. This allows developers to see how their app is doing and, if
made public, allows users to also see how well an app is faring. My current
lifestyle consists of reading the codebase and playing with code, eating
and drinking unlimited free Clif Bars and Vitamin Water Zeros, walking back
and forth between my desk and "collaboration station" (a puny desk that
encourages close-quarters hacking), and going home to play basketball. It's
quite luxurious.

---


## Monday: Setting Up

The first task I took on was a seemingly simple one, to **add a link** to a
page and sidebar that leads to the page with statistics. In Bugzilla
(Mozilla bug tracker), this was bug #749319, a number I will hold dear to
my heart forever.

But before I squashed that bug, I had to get up a development environment
(download/install packages, configuration) before I could start grokking
and coding. I went through a couple of meetings ("all-hands", everyone at
Mozilla, and webdev meetings) and catered lunch (which had wraps that
tasted like sawdust) so I didn't get too much time to set it up on Monday.
It took me overall about a day and a half to get everyone set up enough to
start developing.

On my team and throughout the whole web development team in Mountain View),
everyone was using a Mac. I was the only one using Linux, so I was a bit on
my own. I took notes for documentation on the process of doing it on
Ubuntu. It was somewhat straightforward though I hit a few roadblocks with a
cryptography package, ElasticSearch, and BrowserID (which is really nice). [The
notes](http://ngokevin.com/~ngoke/notes/zamboni_setup) I took during the
process.

I went out with some of the team for a hefty $15 Italian dinner. That night
I played basketball and got a few good pick & rolls in.

<img width="480px" src="http://i.imgur.com/JgWPa.jpg"></img>

## Tuesday: Hacking

With the environment now up, I could finally try to add that link. It
seemed a little easier than it actually was because I wanted to do it
"correctly" and not in a hacky (patchy) manner. This involved exploring the
codebase and finding out how the pieces fit together. By knowing where
certain pieces of code were, I could know where to put my pieces of code.
Like in a jigsaw puzzle, it helps to have a bigger picture by looking at
the box to know where to put individual pieces.

Mozilla Marketplace alpha launched! We had lunch at a Mexican restaurant
with a pitcher of mango Magaritas.

Initially, I was able to add the links. So I committed and shared the code.
Though, I kept messing up some minor parts of the code (though nothing to
do with functionality). There were either some PEP8 hiccups (which I feel
ashamed of) or some code that could be refactored. PEP8 is the Python style
guide that sort of defines how the code should look stylistically.
Refactoring is making code simpler or writing code with less lines. So I
had to show the code and turn around to revise it many times.

There are a shitload of tests for Mozilla Marketplace (over 4000!!!). It's
really useful to test for regressions. Everytime I write code ready to be
committed, I run tests to make sure my code didn't break anything else. For
most pieces of code I write, I write a corresponding test (or even write
the test before the code).

Since the code had to be revised often, I would have to commit more code to
my local code checkout. Though in the end, I wanted the whole patch to be
within only *one* commit. To do this, I worked in a Git branch (think
different timeline). I would work on the branch, write some code, and
commit the code. Then to push it to my master branch (the main timeline)
all in one commit, I would squash the commits together which rewrites
history to make multiple commits look like one commit.

    # commit code
    git commit -a -m "my code commit in a branch"

    # checkout master
    git checkout master

    # merge the branch with master branch
    git merge

    # squash the commits together
    git rebase -i

    # the commits
    pick -hash- earlier commit
    pick -hash- lastest commit

    # squash the latest one into the earlier one
    pick -hash- earlier commit
    squash -hash- lastest commit

    # follow the prompts, edit the commit msg

    # push!
    git push -f

If master is a cleaner slate and there are commits in a branch that I can
bundle together in the branch alone, I can simply merge squash and commit.

    git checkout master
    git merge --squash
    git commit -a -m "my squashed commits into one commit"
    git push

I went home around 7 since I didn't want to burn myself out and wanted to
play basketball. It's nice to leave work while in the middle of something
since I can pick up where I left up on the next day rather than come into
work not knowing what to do next. I played HORSE that night.

## Wednesday: R+, What's Next

Today, I made lunch for myself! For the first time ever, I cooked something
larger than a sandwich. It took two hours in the kitchen and washing off a
ton of fat and oil in the sink, but I came out with spaghetti. It was made
the night before for lunch the next day.

<img width="480px" style="clear:both;" src="http://i.imgur.com/P7yFe.jpg"></img>
*My spaghetti, practically the first meal I've ever cooked.*

After some working, my patch got an R+ (checked and allowed) and was merged
into the main Mozilla repository. [First
patch!](https://github.com/ngokevin/zamboni/commit/0962d2a63c6154df4a4e45d4fe867358800428ef)
(not counting the one-letter Playdoh commit I did a few months ago).

<img width="480px" src="http://imgur.com/PzTIG.jpg"></img>
*Edited using [DrawNothing](http://ngokevin.com/~ngoke/draw_nothing)*

My brain kind of went of vacation after that because I got distracted
playing trivia on an IRC channel. There's a channel (~chat room) with a bot
(program) that asks trivia questions and awards points to correct answers.
Funny and addicting, a nerd's DrawSomething.

[GitHub](http://github.com) redesigned their site today with "octacons" or
something. The site looks ugly and cluttered with oversized icons and
elements running into each other. I am disappoint. And the spaghetti was
alright.

I took on my next task which was to implement financial statistics and
graphs, and basically was giving free reign to try things to the frontend
and experiment with stuff. Currently there was a codebase for displaying
app installations and usage (how many instances of the app was being used
each day), but financial stats were not much there yet. It was sort of a
work-in-progress which was put off for other things. The last task was sort
of lke a warm-up.This felt more like a project. I had to explore a much
wider range of the codebase which extended into many different models and
into Javascript files.

To start, I worked on getting up a graph and table for app refunds. Today,
I got pretty far on that after some serious grokking of the codebase. After
that, I plan on getting graphs up for every metric and then work on
connecting them together with navigation (links, tabs, drop-downs, sliders)
and merged graphs.

<img width="480px" src="http://imgur.com/zXxT8.jpg"></img>
*So far I got the refunds up.*

I went home around 7 again for more basketball and worked on spins, scissor
dribbles, and behind-back dribbles for a couple hours. Basketball is such a
nice compliment to programming.
